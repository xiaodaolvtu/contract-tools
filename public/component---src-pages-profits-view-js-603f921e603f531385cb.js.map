{"version":3,"sources":["webpack:///./src/pages/ProfitsView.js","webpack:///./src/components/ContractTab.js","webpack:///./src/datas/formulas.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/MessageContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/MessageHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/MessageItem.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/MessageList.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Message/Message.js"],"names":["types","leverages","ProfitsView","state","contractType","leverage","openPrice","closePrice","amount","type","setOpenPrice","e","_ref","value","_this","setState","setClosePrice","_ref2","setAmount","_ref3","onClick","p","formulas","profit_long","profit_short","console","log","Result","render","_this2","this","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","Pane","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","Item","_components_ContractTab__WEBPACK_IMPORTED_MODULE_2__","title","SetContractType","values","defaultValue","SetLeverage","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","style","width","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","label","basic","content","marginLeft","onChange","placeholder","labelPosition","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","Header","semantic_ui_react__WEBPACK_IMPORTED_MODULE_9__","color","display","alignItems","Component","firstNode","CheckboxExampleRadioGroup","props","_Component","call","callback","SetCurrency","handleChange","ckRef","React","createRef","clear","MContainer","Segment","group","Container","length","react__WEBPACK_IMPORTED_MODULE_3___default","map","v","ref","radio","name","checked","ContractSize","btc","ltc","other","average_price","count","deals","size","toLowerCase","result","forEach","deal","price","parseInt","parseFloat","toFixed","original_margin","lever","close_price","liquidation_price_long","margin","liquidation_proportion","liquidation_price_short","MessageContent","children","className","classes","classnames_default","rest","Object","getUnhandledProps","ElementType","getElementType","react_default","extends_default","lib","isNil","handledProps","propTypes","Message_MessageContent","MessageHeader","create","factories","val","Message_MessageHeader","MessageItem","defaultProps","as","Message_MessageItem","MessageList","items","map_default","Message_MessageList","__webpack_require__","d","__webpack_exports__","Message_Message","Message","_getPrototypeOf2","classCallCheck_default","_len","arguments","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","apply","concat","defineProperty_default","assertThisInitialized_default","onDismiss","inherits_default","createClass_default","key","_this$props","attached","compact","error","floating","header","hidden","icon","info","list","negative","positive","success","visible","warning","classNameBuilders","dismissIcon","Icon","handleDismiss","autoGenerateKey","isNil_default","react"],"mappings":"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","file":"component---src-pages-profits-view-js-603f921e603f531385cb.js","sourcesContent":["import React, { Component } from 'react'\nimport ContractTab from '../components/ContractTab'\nimport {\n  Label,\n  Segment,\n  Tab,\n  List,\n  Input,\n  Button,\n  Message\n} from 'semantic-ui-react'\nimport   formulas  from '../datas/formulas'\nconst types = ['多单', '空单']\nconst leverages = ['10x', '20x']\nclass ProfitsView extends Component {\n\tstate = {contractType:'多单',leverage:'10x',openPrice:0,closePrice:0,amount:0,type:'btc'}\n\tsetOpenPrice= (e, { value }) => this.setState({ openPrice : value })\n\tsetClosePrice= (e, { value }) => this.setState({ closePrice : value })\n\tsetAmount= (e, { value }) => this.setState({ amount : value })\n\tonClick= (e) => {\n\t\tconst getProfits = this.state.contractType==='多单'?formulas.profit_long:formulas.profit_short\n\t\tconst p = getProfits(this.state.type, this.state.closePrice,this.state.openPrice,this.state.amount)\n\t\tconsole.log(p)\n\t\tthis.setState({Result:p})\n\t}\n    render() {\n  \t  return (\n\t\t<Tab.Pane>\n\t\t\t  <List>\n\t\t\t    <List.Item>\n\t\t\t\t\t<ContractTab \n\t\t\t\t\t\ttitle=\"合约类型\"\n\t\t\t\t\t\tSetContractType = {(value)=>this.setState({contractType:value})} \n\t\t\t\t\t\tvalues={types}\n\t\t\t\t\t\tdefaultValue={types[0]}/>\n\t\t\t\t\t<ContractTab \n\t\t\t\t\t\ttitle=\"杠杆倍数\"\n\t\t\t\t\t\tSetLeverage = {(value)=>this.setState({leverage:value})} \n\t\t\t\t\t\tvalues={leverages} \n\t\t\t\t\t\tdefaultValue={leverages[0]}/>\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<Label style={{width:'130px'}}> 开仓价格:{\"(\"+(this.state.openPrice||0)+\")\"} </Label>\n\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\tlabel={{ basic: true, content: '$' }}\n\t\t\t\t\t\t\tstyle={{marginLeft:  '20px' }} \n\t\t\t\t\t\t\tonChange={this.setOpenPrice}\n\t\t\t\t\t\t\tplaceholder='0' />\n\t\t\t\t\t</Segment>\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<Label style={{width:'130px'}}> 平仓价格:{\"(\"+(this.state.closePrice||0)+\")\"} </Label>\n\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\tlabel={{ basic: true, content: '$' }}\n\t\t\t\t\t\t\tstyle={{marginLeft:  '20px' }} \n\t\t\t\t\t\t\tonChange={this.setClosePrice}\n\t\t\t\t\t\t\tplaceholder='0' />\n\t\t\t\t\t</Segment>\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<Label style={{width:'130px'}}> 开仓数量:{\"(\"+(this.state.amount||0)+\")\"} </Label>\n\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\tlabel={{ basic: true, content: '张' }}\n\t\t\t\t\t\t\tlabelPosition='right'\n\t\t\t\t\t\t\tstyle={{marginLeft:  '20px' }} \n\t\t\t\t\t\t\tonChange={this.setAmount}\n\t\t\t\t\t\t\tplaceholder='0' />\n\t\t\t\t\t</Segment>\n\t\t\t\t\t\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.Result?\t<Segment><Message> <Message.Header>在该位置平仓可获得收：</Message.Header>{this.state.Result+' '+this.state.type}</Message></Segment>\n\t\t\t\t\t\t\t:null\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t    </List.Item>\n\t\t\t  </List>\n\t\t\t   <Button color='green' style={{display: 'flex',alignItems: 'center'}} onClick={this.onClick}>计算收益</Button>\n\t\t</Tab.Pane>\n  \t  )\n    }\n}\nexport default ProfitsView","import React, { Component } from 'react'\nimport { Form, Checkbox, Label,Segment,Container } from 'semantic-ui-react'\nconst firstNode = { marginLeft:  '20px' };\nexport default class CheckboxExampleRadioGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.ckRef = React.createRef();\n  }\n  state = {value:this.props.defaultValue||''}\n  callback = this.props.SetContractType||this.props.SetLeverage||this.props.SetCurrency||null\n  handleChange = (e, { value }) => this.setState({ value },this.callback( value ))\n  clear(){\n  \t// const values = this.props.values || []\n  \t// const v = values[0]||''\n  \t// this.setState({value:v||''},this.ckRef.current.value=v)\n  }\n  render() {\n  \tconst values = this.props.values || []\n  \tvar MContainer = Segment\n\tif(this.props.group)  MContainer = Container\n  \tif(values.length>0){\n  \t\t//\t\t          <Label style={{width:'130px',marginLeft:'-9px'}}>{this.props.title}: <b>{\"(\"+this.state.value+\")\"}</b> : </Label>\n\n\t    return (\n\t      <MContainer style={this.props.style||null}>\n\t\t          <Label style={{width:'130px',marginLeft:'-9px'}}>{this.props.title}: </Label>\n\t\t          {values.map((v)=><Checkbox\n\t\t        \tref={this.ckRef} \n\t\t            style={firstNode}\n\t\t            radio\n\t\t            label={v}\n\t\t            name='checkboxRadioGroup'\n\t\t            value={v}\n\t\t            checked={this.state.value === v}\n\t\t            onChange={this.handleChange}\n\t\t          />)}\n\t      </MContainer>\n\t    )\n  \t}\n  \telse return null\n  }\n}\n","//合约面值 单位：美元\nconst ContractSize = {\n\tbtc: 100,\n\tltc: 10,\n\tother: 10\n}\n\n\n/*\ntype :'btc', 'ltc'...\ncount : total count of contract\n//deals struction\n{\n\t成交数量 ：count\n\t成交价格 ：price \n}\n*/\n\nconst formulas ={\n\t\t//撮合均价计算\n\t\t//合约面值*总持仓量/（（合约面值*成交1持仓量）/开仓价格1）+ （2）+ （3））\n\t\taverage_price : (type, count, deals) => {\n\t\t\tconst size = ContractSize[(''+type).toLowerCase()||'btc'];\n\t\t\tvar result = 0;\n\t\t\tvar count = 0;\n\t\t\tdeals.forEach(function(deal){\n\t\t\t\tif(deal.price) {\n\t\t\t\t\tcount = count +parseInt(deal.count)\n\t\t\t\t\tresult = parseFloat(result) + (size*parseFloat(deal.count)/parseFloat(deal.price));\n\t\t\t\t\tconsole.log(\"@@\"+result)\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn {price:parseFloat(size*count/result).toFixed(4),count:count}\n\t\t},\n\t\t//初始保证金计算\n\t\t//币种，开仓价，合约数量\n\t\t//合约面值*持仓量/（合约面值*持仓量）\n\t\toriginal_margin : (type, price, count,lever) => {\n\t\t\tconst l = lever ||10\n\t\t\tconst size = parseInt(ContractSize[type||'btc']);\n\t\t\tconst m = parseFloat((size*count)/price).toFixed(4)\n\t\t\treturn  m/parseInt(lever)\n\t\t},\n\t\t//收益计算(多)\n\t\t// (合约价值 / 开仓价价 – 合约价值 / 最新成交价) * 持仓量 = profit\n\t\tprofit_long : (type, close_price,  price, count) => {\n\t\t\tconst size = ContractSize[type||'btc'];\n\t\t\treturn (size/price - size/close_price)*count\n\t\t\t\n\t\t},\n\t\tprofit_short : (type, close_price,  price, count) => {\n\t\t\tconst size = ContractSize[type||'btc'];\n\t\t\treturn (size/close_price - size/price)*count\n\t\t\t\n\t\t},\n\t\t//爆仓价计算\n\t\t//币种，杠杆倍数，开仓价，合约数量，保证金（为空计算初始爆仓价位）\n\t\t// 爆仓价 = 合约价值/（合约价值 / 开仓价价  - profit/持仓量 ）\n\t\t//10倍杠杆用户，保证金的10%，即保证金率小于等于10%；\n\t\t//20倍杠杆用户，合约账户权益小于等于保证金的20%，即保证金率小于等于20%\n\t\tliquidation_price_long : (type, lever,  price, count, margin) => {\n\t\t\tconst size = parseInt(ContractSize[type||'btc']);\n\t\t\tconst liquidation_proportion = 1-(parseInt(lever||10)/100);\n\t\t\tconst m = margin || formulas.original_margin (type, price, count,lever)\n\t\t\tconst liquidation_position = -m*liquidation_proportion;\n\t\t\treturn size/((size/price)-(liquidation_position/count))\n\t\t},\n\t\tliquidation_price_short : (type, lever,  price, count, margin) => {\n\t\t\tconst size = parseInt(ContractSize[type||'btc']);\n\t\t\tconst liquidation_proportion = 1-(parseInt(lever||10)/100);\n\t\t\tconst m = margin || formulas.original_margin (type, price, count,lever)\n\t\t\tconst liquidation_position = -m*liquidation_proportion;\n\t\t\t\n\t\t\treturn size/((size/price)+(liquidation_position/count))\n\t\t},\n\t\t\n}\n\nexport default formulas","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a content.\n */\n\nfunction MessageContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageContent, props);\n  var ElementType = getElementType(MessageContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default MessageContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a header.\n */\n\nfunction MessageHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(MessageHeader, props);\n  var ElementType = getElementType(MessageHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageHeader.create = createShorthandFactory(MessageHeader, function (val) {\n  return {\n    content: val\n  };\n});\nexport default MessageHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message list can contain an item.\n */\n\nfunction MessageItem(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageItem, props);\n  var ElementType = getElementType(MessageItem, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageItem.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageItem.defaultProps = {\n  as: 'li'\n};\nMessageItem.create = createShorthandFactory(MessageItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default MessageItem;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport MessageItem from './MessageItem';\n/**\n * A message can contain a list of items.\n */\n\nfunction MessageList(props) {\n  var children = props.children,\n      className = props.className,\n      items = props.items;\n  var classes = cx('list', className);\n  var rest = getUnhandledProps(MessageList, props);\n  var ElementType = getElementType(MessageList, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? _map(items, MessageItem.create) : children);\n}\n\nMessageList.handledProps = [\"as\", \"children\", \"className\", \"items\"];\nMessageList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand Message.Items. */\n  items: customPropTypes.collectionShorthand\n} : {};\nMessageList.defaultProps = {\n  as: 'ul'\n};\nMessageList.create = createShorthandFactory(MessageList, function (val) {\n  return {\n    items: val\n  };\n});\nexport default MessageList;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _isNil from \"lodash/isNil\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createHTMLParagraph, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport MessageContent from './MessageContent';\nimport MessageHeader from './MessageHeader';\nimport MessageList from './MessageList';\nimport MessageItem from './MessageItem';\n/**\n * A message displays information that explains nearby content.\n * @see Form\n */\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Message)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleDismiss\", function (e) {\n      var onDismiss = _this.props.onDismiss;\n      if (onDismiss) onDismiss(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          attached = _this$props.attached,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          compact = _this$props.compact,\n          content = _this$props.content,\n          error = _this$props.error,\n          floating = _this$props.floating,\n          header = _this$props.header,\n          hidden = _this$props.hidden,\n          icon = _this$props.icon,\n          info = _this$props.info,\n          list = _this$props.list,\n          negative = _this$props.negative,\n          onDismiss = _this$props.onDismiss,\n          positive = _this$props.positive,\n          size = _this$props.size,\n          success = _this$props.success,\n          visible = _this$props.visible,\n          warning = _this$props.warning;\n      var classes = cx('ui', color, size, useKeyOnly(compact, 'compact'), useKeyOnly(error, 'error'), useKeyOnly(floating, 'floating'), useKeyOnly(hidden, 'hidden'), useKeyOnly(icon, 'icon'), useKeyOnly(info, 'info'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(success, 'success'), useKeyOnly(visible, 'visible'), useKeyOnly(warning, 'warning'), useKeyOrValueAndKey(attached, 'attached'), 'message', className);\n      var dismissIcon = onDismiss && React.createElement(Icon, {\n        name: \"close\",\n        onClick: this.handleDismiss\n      });\n      var rest = getUnhandledProps(Message, this.props);\n      var ElementType = getElementType(Message, this.props);\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), dismissIcon, children);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), dismissIcon, Icon.create(icon, {\n        autoGenerateKey: false\n      }), (!_isNil(header) || !_isNil(content) || !_isNil(list)) && React.createElement(MessageContent, null, MessageHeader.create(header, {\n        autoGenerateKey: false\n      }), MessageList.create(list, {\n        autoGenerateKey: false\n      }), createHTMLParagraph(content, {\n        autoGenerateKey: false\n      })));\n    }\n  }]);\n\n  return Message;\n}(Component);\n\n_defineProperty(Message, \"Content\", MessageContent);\n\n_defineProperty(Message, \"Header\", MessageHeader);\n\n_defineProperty(Message, \"List\", MessageList);\n\n_defineProperty(Message, \"Item\", MessageItem);\n\n_defineProperty(Message, \"handledProps\", [\"as\", \"attached\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"error\", \"floating\", \"header\", \"hidden\", \"icon\", \"info\", \"list\", \"negative\", \"onDismiss\", \"positive\", \"size\", \"success\", \"visible\", \"warning\"]);\n\nexport { Message as default };\nMessage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A message can be formatted to attach itself to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['bottom', 'top'])]),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A message can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A message can only take up the width of its content. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `negative`. */\n  error: PropTypes.bool,\n\n  /** A message can float above content that it is related to. */\n  floating: PropTypes.bool,\n\n  /** Shorthand for MessageHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** A message can be hidden. */\n  hidden: PropTypes.bool,\n\n  /** A message can contain an icon. */\n  icon: PropTypes.oneOfType([customPropTypes.itemShorthand, PropTypes.bool]),\n\n  /** A message may be formatted to display information. */\n  info: PropTypes.bool,\n\n  /** Array shorthand items for the MessageList. Mutually exclusive with children. */\n  list: customPropTypes.collectionShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `error`. */\n  negative: PropTypes.bool,\n\n  /**\n   * A message that the user can choose to hide.\n   * Called when the user clicks the \"x\" icon. This also adds the \"x\" icon.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onDismiss: PropTypes.func,\n\n  /** A message may be formatted to display a positive message.  Same as `success`. */\n  positive: PropTypes.bool,\n\n  /** A message can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** A message may be formatted to display a positive message.  Same as `positive`. */\n  success: PropTypes.bool,\n\n  /** A message can be set to visible to force itself to be shown. */\n  visible: PropTypes.bool,\n\n  /** A message may be formatted to display warning messages. */\n  warning: PropTypes.bool\n} : {};"],"sourceRoot":""}